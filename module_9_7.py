# Декоратор принимает функцию func в качестве аргумента.Внутри декоратора определена функция wrapper,
# которая принимает переменное количество аргументов (*args и **kwargs). Это позволяет декоратору работать с любой
# функцией, независимо от ее параметров.

def is_prime(func):
    def wrapper(*args, **kwargs):
        #  Внутри wrapper вызывается оригинальная функция func, передавая ей все аргументы
        #  и сохраняется результат в переменной result.
        result = func(*args, **kwargs)
        #  Если результат меньше 2, выводится "Составное".
        if result < 2:
            print("Составное")
        else:
            # Если результат 2 или больше, начинается цикл проверки делителей от 2 до квадратного корня результата.
            # Если результат делится на i без остатка, выводится "Составное" и происходит выход из цикла.
            # Если ни одно условие не выполняется, выводится "Простое".
            for i in range(2, result ** 0, 5 + 1):
                if result % i == 0:
                    print("Составное")
                    break
            else:
                print("Простое")
        return result

    #  Функция wrapper возвращает результат выполнения оригинальной функции.
    return wrapper


# Декоратор применяется к функции sum_three, которая складывает три числа.
@is_prime
def sum_three(a, b, c):
    return a + b + c


result = sum_three(2, 3, 6)
print(result)
